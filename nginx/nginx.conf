# The config just a simple example, you can modify it to fit your needs
# This config is for a simple frontend and backend setup
# The data is fake and sensitive data is replaced with placeholders
# The goal is to show you how to setup a simple frontend and backend setup

worker_processes  1;

events {
    worker_connections  1024;
}

http {
    server {
        listen       80;
        server_name  localhost;

        # Serve frontend files
    location / {
        proxy_pass http://192.168.1.12:3200;  # Use http:// to specify the URL
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

        # Proxy requests to backend
        location /v1/api/ {
            proxy_pass http://192.168.1.12:3055; # Change to your backend port
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Add your API key here if you have one for client supplication
            proxy_set_header x-api-key "a98b656cd9feda6f04e9f79b06b00fff55fc46d81b85e185cdd5ddde5997ec04929e30bfd58018dc1b4db7c76cff0aeceabb5c44757f4157078bf837d8e1ff40";
        }

        # error_page   500 502 503 504  /50x.html;
        # location = /50x.html {
        #     root   /path/to/error/pages;
        # }
    }
}